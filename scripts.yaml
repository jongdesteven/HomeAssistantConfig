sonos_say:
  alias: "Sonos TTS script"
  sequence:
   - service: media_player.sonos_snapshot
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.sonos_unjoin
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.volume_set
     data_template:
       entity_id: "{{ sonos_entity }}"
       volume_level: "{{ volume }}"
   - service: tts.google_say
     data_template:
       entity_id: "{{ sonos_entity }}"
       message: "{{ message }}"
   - delay: "{{ delay }}"
   - service: media_player.sonos_restore
     data_template:
       entity_id: "{{ sonos_entity }}"

tv_lift_up:
  alias: "TV Lift Up Script"
  sequence:
    - service: switch.turn_on
      entity_id: switch.tv_lift_up
    - service: switch.turn_off
      entity_id: switch.tv_lift_down
#    - service: media_player.apple_tv_press_buttons
#      entity_id: media_player.apple_tv
#      buttons: top_menu
tv_lift_down:
  alias: "TV Lift Down Script"
  sequence:
    - service: switch.turn_on
      entity_id: switch.tv_lift_down
    - service: switch.turn_off
      entity_id: switch.tv_lift_up
#    - service: media_player.apple_tv_press_buttons
#      entity_id: media_player.apple_tv
#      buttons: top_menu, top_menu, select

early_heating:
  alias: "Pre-heat the house"
  sequence:
    - service: notify.ios_iphone_steven
      data_template:
        message: "Het is nu {{ states.sensor.woonkamer_temperature.state | float }}Â°C. \n {{ ( ( 20.0 - ( states.sensor.woonkamer_temperature.state | float ) ) * 60.0 ) | int }} min togo"
        title: "Het is koud thuis"
    - delay:
        minutes: 120
      #- delay: >
      #{% if ( ( 20.0 - ( states.sensor.woonkamer_temperature.state | float ) ) * 60.0 ) | int <= 180 %}
      #  {% if {{ 120 <= 180 }} %}
      #    minutes: {{ 180 - ( ( ( 20.0 - ( states.sensor.woonkamer_temperature.state | float ) ) * 60.0 ) | int ) }}
      #  {% else %}
      #    seconds: 10
      #  {% endif %}
    - service: climate.set_temperature
      entity_id: climate.woonkamer 
      data:
        temperature: 20
        operation_mode: Manual

lights_during_day:
  alias: Turn on Lights during day
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.woonkamer
        brightness: 75
        kelvin: 2700
    - service: light.turn_on
      data:
        entity_id: light.keuken
        brightness: 75
        kelvin: 2700
    - service: switch.turn_on
      entity_id:
      - switch.staande_lamp

woonkamerverlichting_avond:
  alias: Woonkamer lampen avond
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.woonkamer
        brightness: 25
        kelvin: 2500
    - service: light.turn_on
      data:
        entity_id: light.keuken
        brightness: 5
        kelvin: 2500
    - service: switch.turn_on
      entity_id:
      - switch.staande_lamp

verlichting_niet_thuis:
  alias: Woonkamer lampen afwezig
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.hoek_kamer, light.livingcolors_1
        brightness: 50
        kelvin: 2700
    - service: light.turn_on
      data:
        entity_id: light.keuken
        brightness: 5
        kelvin: 2500

verlichting_binnen_uit:
  alias: Alle Lampen binnen uit
  sequence:
    - service: light.turn_off
      entity_id:
        - light.keuken
        - light.woonkamer
        - light.badkamer
        - light.slaapkamer
        - light.tuinkamer

# Dimmer Script
light_dimmer:
  alias: Lights brightness Dimmer
  description: Dim the Lights
  fields:
    direction:
      description: "Direction of dimming: up or down"
      example: up
    light:
      description: "Light entity_id"
      example: light.slaapkamer
  mode: restart
  sequence:
    repeat:
      sequence:
        - service: light.turn_on
          data:
            entity_id: "{{ light }}"
            brightness_step_pct: >
              {% if direction == 'up' %}
                {{ states( 'input_number.dimmer_step' ) | int }}
              {% else %}
                {{ (states( 'input_number.dimmer_step' )) | int * -1 }}
              {% endif %}
        - delay:
            milliseconds: >
              {{ states( 'input_number.dimmer_delay' ) | int }}
      while:
        - condition: template
          value_template: >
            {{ direction == 'up' and (state_attr( light, 'brightness') | int) < 250 or
                direction == 'down' and (state_attr( light, 'brightness' ) | int) > 5 }}

wodtimer_button_play:
  alias: WodTimer button play
  sequence:
    service: mqtt.publish
    data_template:
      topic: wodtimer/buttons
      payload: "1"
wodtimer_button_menu:
  alias: WodTimer button menu
  sequence:
    service: mqtt.publish
    data_template:
      topic: wodtimer/buttons
      payload: "2"
wodtimer_button_minus:
  alias: WodTimer button -
  sequence:
    service: mqtt.publish
    data_template:
      topic: wodtimer/buttons
      payload: "3"
wodtimer_button_plus:
  alias: WodTimer button +
  sequence:
    service: mqtt.publish
    data_template:
      topic: wodtimer/buttons
      payload: "4"
wodtimer_button_play_long_press:
  alias: WodTimer button play-longPress
  icon: mdi:backup-restore
  sequence:
    service: mqtt.publish
    data_template:
      topic: wodtimer/buttons
      payload: "5"
